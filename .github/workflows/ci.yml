name: ci

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]
env:
  AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
  AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
  AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
  PHP_CS_FIXER_IGNORE_ENV: 1

jobs:
  tests:

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Copy .env
        run: cp .env.ci .env
      - name: Update Dependencies
        run: composer update
      - name: Install Dependencies
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Clear and regenerate cache
        run: php artisan config:cache
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Execute Migration
        run: php artisan migrate --force
      - name: Execute Seed
        run: php artisan db:seed --force
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit --coverage-clover=coverage.xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: tests
          name: codecov-umbrella
          fail_ci_if_error: true

  php-cs-fixer:

   runs-on: ubuntu-latest
   steps:
       - uses: actions/checkout@master
       - name: Prepare php-cs-fixer
         run: |
             wget https://cs.symfony.com/download/php-cs-fixer-v2.phar -O php-cs-fixer
             chmod a+x php-cs-fixer
       - name: Execute php-cs-fixer
         run: php php-cs-fixer fix --path-mode=intersection --dry-run
